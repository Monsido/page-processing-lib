'use strict';

module.exports = {
    env: {
        browser: true,
        es2021: true,
    },
    extends: [
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 12,
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint'],
    rules: {
        '@typescript-eslint/explicit-function-return-type': 'error',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/naming-convention': [
            'error',
            { 'selector': 'variable', 'format': ['camelCase', 'UPPER_CASE', 'PascalCase', 'snake_case'], 'leadingUnderscore': 'allow', 'trailingUnderscore': 'allow'},
            { 'selector': 'typeLike', 'format': ['camelCase', 'PascalCase'] },
            { 'selector': 'property', 'format': null },
            { 'selector': 'parameter', 'format': ['camelCase', 'PascalCase'] },
        ],
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-explicit-any': 'error',
        '@typescript-eslint/no-incompatible-type-binding': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/no-non-null-assertion': 'error',
        '@typescript-eslint/no-prototype-builtins': 'off',
        '@typescript-eslint/no-use-before-define': ['error', { 'classes': false, 'functions': false }],
        '@typescript-eslint/indent': ['error', 4],
        'no-shadow': "off",
        '@typescript-eslint/no-shadow': ['error', {
            'hoist': 'all'
        }],
        'array-bracket-newline': 'off',
        'array-bracket-spacing': ['error', 'never'],
        'array-element-newline': 'off',
        'arrow-parens': 'off',
        'block-spacing': ['error', 'always'],
        'brace-style': 'error',
        'camelcase': 'off',
        'comma-dangle': ['error', 'always-multiline'],
        'comma-spacing': 'off',
        'comma-style': 'error',
        'computed-property-spacing': 'error',
        'constructor-super': 'error',
        'curly': 'error',
        'eol-last': 'error',
        'func-call-spacing': 'error',
        'generator-star-spacing': ['error', 'after'],
        'guard-for-in': 'error',
        'indent': 'off',
        'key-spacing': 'error',
        'keyword-spacing': 'error',
        'linebreak-style': 'error',
        'max-len': ['warn', { 'code': 160, 'ignorePattern': '^import\\s.+\\sfrom\\s.+;$', 'ignoreUrls': true, 'tabWidth': 4 }],
        'new-cap': 'error',
        'newline-per-chained-call': ['error', { 'ignoreChainWithDepth': 2 }],
        'no-array-constructor': 'error',
        'no-caller': 'error',
        'no-case-declarations': 'off',
        'no-console': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-invalid-this': 'error',
        'no-irregular-whitespace': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-multi-spaces': 'error',
        'no-multi-str': 'error',
        'no-multiple-empty-lines': ['error', { 'max': 2 }],
        'no-new-object': 'error',
        'no-new-symbol': 'error',
        'no-new-wrappers': 'error',
        'no-tabs': 'error',
        'no-this-before-super': 'error',
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-unexpected-multiline': 'error',
        'no-unused-vars': ['error', { 'args': 'none' }],
        'no-var': 'error',
        'no-with': 'error',
        'object-curly-spacing': ['error', 'always'],
        'one-var': ['error', 'never'],
        'operator-linebreak': ['error', 'after', { 'overrides': { ':': 'before', '?': 'before' } }],
        'padded-blocks': 'off',
        'prefer-const': ['error', { 'destructuring': 'all' }],
        'prefer-promise-reject-errors': 'error',
        'prefer-rest-params': 'error',
        'prefer-spread': 'error',
        'quote-props': 'off',
        'quotes': [ 'error', 'single', { 'allowTemplateLiterals': true }],
        'require-jsdoc': 'off',
        'rest-spread-spacing': 'error',
        'semi': 'error',
        'semi-spacing': 'error',
        'space-before-blocks': 'error',
        'space-before-function-paren': 'error',
        'space-in-parens': 'off',
        'space-infix-ops': 'error',
        'space-unary-ops': ['error', { 'nonwords': false, 'overrides': {} }],
        'spaced-comment': ['error', 'always'],
        'switch-colon-spacing': 'error',
        'wrap-iife': 'off',
        'yield-star-spacing': ['error', 'after']
    },
};
